language: php

php:
  - 5.5
  - 5.6
  - 7.0
  - hhvm

sudo: required
dist: trusty
group: edge

services:
  - docker
  - memcached
  - redis-server

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

env:
  matrix:
    - "DB=sqlite db_dsn='sqlite:///tmp/test.sql'"
    - "DB=mysql DB_VERSION=5.7 db_dsn='mysql://bedita:bedita@127.0.0.1:33060/bedita_test'"
    - "DB=pgsql db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
  global:
    - RUN_TESTS=1

matrix:
  fast_finish: true

  include:
    - php: 7.0
      env: "DB=mysql DB_VERSION=5.5 db_dsn='mysql://bedita:bedita@127.0.0.1:33060/bedita_test'"
    - php: 7.0
      env: "DB=mysql DB_VERSION=5.6 db_dsn='mysql://bedita:bedita@127.0.0.1:33060/bedita_test'"
    - php: 7.0
      env: "DB=pgsql DB_VERSION=9.3 db_dsn='postgres://postgres:postgres@127.0.0.1:54320/bedita_test'"
    - php: 7.0
      env: "DB=pgsql DB_VERSION=9.4 db_dsn='postgres://postgres:postgres@127.0.0.1:54320/bedita_test'"
    - php: 7.0
      env: "DB=pgsql DB_VERSION=9.5 db_dsn='postgres://postgres:postgres@127.0.0.1:54320/bedita_test'"
    - php: 7.0
      env: RUN_CS=1 RUN_TESTS=0

  exclude:
    - php: 7.0
      env: "DB=pgsql db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
    - php: hhvm
      env: "DB=pgsql db_dsn='postgres://postgres@127.0.0.1/bedita_test'"

  allow_failures:
    - php: 5.5
    - php: hhvm

before_script:
  - |
    if [ "$DB" = 'mysql' ]; then
      if [ -n "$DB_VERSION" ]; then
        docker pull mysql:$DB_VERSION
        docker run -d -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=bedita -e MYSQL_PASSWORD=bedita -e MYSQL_DATABASE=bedita_test -p 127.0.0.1:33060:3306 mysql:$DB_VERSION
        docker ps -a
      else
        mysql -e 'CREATE DATABASE bedita_test;'
      fi
    fi
  - |
    if [ "$DB" = 'pgsql' ]; then
      if [ -n "$DB_VERSION" ]; then
        docker pull postgres:$DB_VERSION
        docker run -d -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=bedita_test -p 127.0.0.1:54320:5432 postgres:$DB_VERSION
        docker ps -a
      else
        psql -c 'CREATE DATABASE bedita_test;' -U postgres
      fi
    fi

  - if [ -n "$GH_TOKEN" ]; then composer config github-oauth.github.com ${GH_TOKEN}; fi
  - composer install --prefer-dist --no-interaction

  - |
    if [ "$TRAVIS_PHP_VERSION" != 'hhvm' ]; then
      echo 'extension = memcached.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
      echo 'extension = redis.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
    else
      composer require lorenzo/multiple-iterator=~1.0
    fi

  - phpenv rehash
  - set +H

script:
  - if [ "$RUN_TESTS" = '1' ]; then vendor/bin/phpunit --coverage-clover=clover.xml; fi
  - if [ "$RUN_CS" = '1' ]; then vendor/bin/phpcs -n -p --extensions=php --standard=vendor/cakephp/cakephp-codesniffer/CakePHP --ignore=/Migrations/,/Seeds/ ./config ./src ./tests ./plugins/*/*/config ./plugins/*/*/src ./plugins/*/*/tests; fi

after_success:
  - if [ "$RUN_TESTS" = '1' ]; then bash <(curl -s https://codecov.io/bash); fi

notifications:
  email: false
  slack:
    secure: TJ1c35YLgdYmIQRB58RKuEPDBN1XZYBjFI842lxa5Rl6FW/x+cJIYNCK3mU48/ULw9RfUla3bLf/oyffaj6pATRSK/jshiVKDU2Pq6yd/YV1aXpaMQLpzr8UJZk/KrG5cDAXhHW0U8O95sVpZm/pLwkNtk5tMPiuvJ35oVJyNuM=
