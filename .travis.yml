language: php

dist: bionic
sudo: false

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

stages:
  - name: minimal
  - name: reference
  - name: complete
  - name: deploy
    if: repo = bedita/bedita AND branch = 4-cactus AND type IN (push, api)

jobs:
  include:
    # Minimal tests set
    - name: "SQLite on PHP 7.2"
      stage: minimal
      php: 7.2
      env: "DB=sqlite db_dsn='sqlite:///tmp/test.sql'"
    - name: "MySQL 5.7 on PHP 7.1"
      stage: minimal
      php: 7.1
      services:
        - mysql
      env: "DB=mysql DB_VERSION=5.7 db_dsn='mysql://root@localhost/bedita_test'"
    - name: "PostgreSQL 9.6 + PostGIS on PHP 7.1"
      stage: minimal
      dist: trusty
      sudo: true
      php: 7.1
      services:
        - postgresql
      addons:
        postgresql: "9.6"
        apt:
          update: true
          packages:
            - "postgresql-9.6-postgis-2.4" # Fix error with PostGIS extension not being found when `CREATE EXTENSION` is issued.
      env: "DB=pgsql DB_VERSION=9.6 DB_POSTGIS=1 db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
    - name: "Code Sniffer"
      stage: minimal
      php: 7.1
      env: "RUN=phpcs"
      before_script: skip
      script: |
        vendor/bin/phpcs -n -p --extensions=php \
          --standard=vendor/cakephp/cakephp-codesniffer/CakePHP --ignore=/Migrations/,/Seeds/ \
          ./config ./src ./tests ./plugins/*/*/config ./plugins/*/*/src ./plugins/*/*/tests

    # Reference tests set with coverage
    - name: "MySQL 5.7 on PHP 7.1"
      stage: reference
      php: 7.1
      services:
        - mysql
      env: "DB=mysql DB_VERSION=5.7 db_dsn='mysql://root@localhost/bedita_test'"
      script: vendor/bin/phpunit --coverage-clover=clover.xml
      after_success: bash <(curl -s https://codecov.io/bash)
    - name: "SQlite on PHP 7.1"
      stage: reference
      php: 7.1
      env: "DB=sqlite db_dsn='sqlite:///tmp/test.sql'"
      script: vendor/bin/phpunit --coverage-clover=clover.xml
      after_success: bash <(curl -s https://codecov.io/bash)
    - name: "PostgreSQL 9.6 + PostGIS on PHP 7.1"
      stage: reference
      dist: trusty
      sudo: true
      php: 7.1
      services:
        - postgresql
      addons:
        postgresql: "9.6"
        apt:
          update: true
          packages:
            - "postgresql-9.6-postgis-2.4" # Fix error with PostGIS extension not being found when `CREATE EXTENSION` is issued.
      env: "DB=pgsql DB_VERSION=9.6 DB_POSTGIS=1 db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
      script: vendor/bin/phpunit --coverage-clover=clover.xml
      after_success: bash <(curl -s https://codecov.io/bash)

    # Complete tests suite
    - name: "MySQL 5.6 on PHP 7.2"
      stage: complete
      dist: trusty
      php: 7.2
      services:
        - mysql
      env: "DB=mysql DB_VERSION=5.6 db_dsn='mysql://root@localhost/bedita_test'"
    - name: "PostgreSQL 9.5 on PHP 7.1"
      stage: complete
      php: 7.1
      services:
        - postgresql
      addons:
        postgresql: "9.5"
      env: "DB=pgsql DB_VERSION=9.5 db_dsn='postgres://postgres@127.0.0.1/bedita_test'"
    - name: "Static Code Analysis"
      stage: complete
      php: 7.1
      env: "RUN=phpstan"
      install:
        - composer install --prefer-dist --no-interaction
        - composer require --dev phpstan/phpstan
      before_script: skip
      script: vendor/bin/phpstan analyse --no-progress src plugins/BEdita/API/src plugins/BEdita/Core/src

    # Deployment on Heroku demo app.
    - name: "Heroku"
      stage: deploy
      php: 7.1
      before_script: skip
      script: skip
      deploy:
        provider: heroku
        app: bedita4
        skip_cleanup: true
        run:
          - "bin/cake migrations migrate -p BEdita/Core"
          - "bin/cake cache clear_all"
          - "BEDITA_API_KEY=herokuapp-super-secret-key bin/cake migrations seed -p BEdita/Core --seed ApplicationFromEnvSeed"
          - "BEDITA_ADMIN_USR=admin BEDITA_ADMIN_PWD=heroku bin/cake migrations seed -p BEdita/Core --seed AdminFromEnvSeed"
        api_key:
          secure: IoV+GK7hyX8/uWmuF7xuc+4SM0a9mCmKAckOTJ+LZj1zpzXRE8LkPXm5GnuYoO/ambRoZkORDwclrXMsloY3TJMFvJxG6UnOlKANBzwKankZK6vWv0O3Jni4TtbW48OShH7yj6iCS7uvwPFrA76c21qlLBp34QAFJO0y73lS+sY=

  allow_failures:
    - env: "RUN=phpstan"

before_install:
  # Use GitHub OAuth token with Composer to increase API limits.
  - if [ -n "$GH_TOKEN" ]; then composer config github-oauth.github.com ${GH_TOKEN}; fi

install:
  # Install Composer dependencies.
  - composer install --prefer-dist --no-interaction

before_script:
  # Enable required PHP Extensions.
  - echo 'extension = memcached.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo 'extension = redis.so' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - phpenv rehash
  - set +H

  # Set up and configure databases.
  - if [ "$DB" = 'mysql' ]; then mysql -u root -e 'CREATE DATABASE bedita_test;'; mysql -u root -e 'SHOW DATABASES;'; fi
  - if [ "$DB" = 'pgsql' ]; then psql -c 'CREATE DATABASE bedita_test;' -U postgres; fi
  - if [ "$DB" = 'pgsql' ] && [ "$DB_POSTGIS" = '1' ]; then psql -c 'CREATE EXTENSION postgis;' -U postgres; fi

script: vendor/bin/phpunit # Run PHPUnit.

notifications:
  email: false
  slack:
    secure: TJ1c35YLgdYmIQRB58RKuEPDBN1XZYBjFI842lxa5Rl6FW/x+cJIYNCK3mU48/ULw9RfUla3bLf/oyffaj6pATRSK/jshiVKDU2Pq6yd/YV1aXpaMQLpzr8UJZk/KrG5cDAXhHW0U8O95sVpZm/pLwkNtk5tMPiuvJ35oVJyNuM=
